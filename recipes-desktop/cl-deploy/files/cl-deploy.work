#!/bin/bash -xv

source=""
destination=""

for var in $(cat /proc/cmdline)
do
[[ $var =~ "=" ]] && eval $var
done

if [[ -b ${root} ]];then
source=$(udevadm info -n ${root} | awk -F "block" '(/DEVPATH/)&&(split($2,a,"/"))&&($0=a[2])')
else
dialog --backtitle "No source device available" --title " WARNING " --msgbox "No soucre device availabe\nExiting ..." 10 60
exit 0
fi

if [[ ! -z ${source} ]];then
all_devs=$(ls /sys/class/block/*/size | awk -v var=${source} -F"/" '(($0!~var)&&(/mmc|sd/)&&($0=$5))')
avail_devs=""
min_size_inb=$(df --block-size=512 / | awk '(/^\//)&&($0=$3)')
for dev in ${all_devs};do
	# Skip partitions
	stat /sys/class/block/${dev}/partition &>/dev/null && continue
	# Device size check
	size=$(cat /sys/class/block/${dev}/size)
	[ ${size} -lt ${min_size_inb} ] && continue
	avail_devs=${avail_devs}" "$dev
done

if [[ ! -z "${avail_devs}" ]];then
avail_devs="${avail_devs#"${avail_devs%%[![:space:]]*}"}"
rlist=''
for adev in ${avail_devs};do
	ddev=$(udevadm info -p /sys/class/block/${adev} | awk '(/ disk\/by-id/)&&(split($2,a,"/")&&($0=a[3]))')
	[[ -z "${ddev}" ]] && ddev=${adev}
	rlist=${rlist}"/dev/"${adev}" "${ddev}" OFF "
done
dialog --backtitle "Select a destination device" --radiolist "Available Devices:" 12 80 12 ${rlist} 2>/tmp/.rlist && destination=$(cat /tmp/.rlist) || exit 0
fi

source="/dev/"${source}
fi

SRC=${source}
DST=${destination}

msrc=/tmp/src
mdst=/tmp/dst

if [[ -z ${SRC} || -z ${DST} ]];then
dialog --backtitle "No destination found" --title " WARNING " --msgbox "No destination found\nPess any key for exit." 10 80
exit 2
fi

dialog --backtitle "Start Deployment" --title " WARNING " --yesno "Src: ${SRC} -> Dst: ${DST}\n\nAll data on ${DST} will be destroyed" 10 80 || exit

[ -f /etc/init.d/udev ] && /etc/init.d/udev stop

umount ${DST}* &>/dev/null

sfdisk --dump ${SRC} | sfdisk ${DST}
echo ",,83" | sfdisk -N 1 ${DST}
echo ",+" | sfdisk -N 2 ${DST}

cat << eom

	Started: ${SRC} ==> ${DST}

eom

[[ ${DST} =~ "mmc" ]] && DST=${DST}p
[[ ${SRC} =~ "mmc" ]] && SRC=${SRC}p

mkfs.ext2 -F -L boot ${DST}1
mkfs.ext4 -F -L rootfs ${DST}2
sleep 1
umount ${DST}* &>/dev/null

mkdir -p ${msrc} ${mdst}

declare -a parts='1 2'

for P in $parts; do
mount ${SRC}${P} ${msrc}
mount ${DST}${P} ${mdst}
prompt="[ ${SRC}${P} => ${DST}${P} ]"
tar -C ${msrc} -cf - . | pv -N "${prompt}"| tar -C ${mdst} -xf -
umount ${DST}${P}
umount ${SRC}${P}
done

cat << eom

	Done: ${SRC} ==> ${DST}

eom

[[ ${DST} =~ "mmc" ]] && DST=${DST:0:$((${#DST}-1))}

CL_DEPLOY_PLATFORM="/usr/local/bin/cl-deploy.platform"
[[ -e ${CL_DEPLOY_PLATFORM} ]] && source ${CL_DEPLOY_PLATFORM}

dialog --backtitle "Finished with success" --yesno "Boot media has been deployed on ${DST}\n\nWould you like to reboot the device now?" 10 80 && reboot

exit
